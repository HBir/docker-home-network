version: '3.9'

# ---------------------------- Networks & Volumes ---------------------------- #
networks:
  proxy:
    external:
      name: proxy
  socket_proxy:
    external:
      name: socket_proxy
  apps:
    external:
      name: apps
  default:
    driver: bridge

volumes:
  netdataconfig:
  netdatalib:
  netdatacache:
  prometheus_data:

services:
  # ---------------------------------------------------------------------------- #
  #                                   Portainer                                  #
  # ---------------------------------------------------------------------------- #
  portainer:
    container_name: 'portainer'
    image: 'portainer/portainer-ce:latest'
    restart: 'unless-stopped'
    networks:
      - 'proxy'
      - 'socket_proxy'
      - 'apps'
    security_opt:
      - 'no-new-privileges:true'
    volumes:
      - '$DOCKERDIR/portainer/data:/data'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/:/host'
    environment:
      - 'TZ=$TZ'
    labels:
      traefik.docker.network: 'proxy'
      traefik.enable: 'true'
      traefik.http.routers.portainer.entrypoints: 'websecure'
      traefik.http.routers.portainer.rule: 'Host(`portainer.$DOMAINNAME`)'
      traefik.http.routers.portainer.service: 'portainer-svc'
      traefik.http.routers.portainer.tls: 'true'
      traefik.http.routers.portainer.tls.certresolver: 'wildcard-cloudflare'
      traefik.http.services.portainer-svc.loadbalancer.server.port: '9000'

  # ---------------------------------------------------------------------------- #
  #                         Glances - System Information                         #
  # ---------------------------------------------------------------------------- #
  # glances:
  #   container_name: 'glances'
  #   image: 'jdreinhardt/glances:release'
  #   restart: 'unless-stopped'
  #   networks:
  #     - 'proxy'
  #     - 'socket_proxy'
  #     - 'apps'
  #   security_opt:
  #     - 'no-new-privileges:true'
  #   environment:
  #     DOCKER_HOST: 'tcp://socket-proxy:2375'
  #     GLANCES_OPT: '-w'
  #   labels:
  #     traefik.docker.network: 'proxy'
  #     traefik.enable: 'true'
  #     traefik.http.routers.glances.entrypoints: 'websecure'
  #     traefik.http.routers.glances.rule: 'Host(`glances.$DOMAINNAME`)'
  #     traefik.http.routers.glances.service: 'glances-svc'
  #     traefik.http.routers.glances.tls: 'true'
  #     traefik.http.routers.glances.tls.certresolver: 'wildcard-cloudflare'
  #     traefik.http.services.glances-svc.loadbalancer.server.port: '61208'
  #   pid: 'host'
  #   privileged: true

  # ---------------------------------------------------------------------------- #
  #                     Dozzle - Real-time Docker Log Viewer                     #
  # ---------------------------------------------------------------------------- #
  dozzle:
    container_name: 'dozzle'
    image: 'amir20/dozzle:latest'
    restart: 'unless-stopped'
    networks:
      - 'proxy'
      - 'socket_proxy'
      - 'apps'
    security_opt:
      - 'no-new-privileges:true'
    environment:
      DOCKER_HOST: 'tcp://socket-proxy:2375'
      DOZZLE_FILTER: 'status=running'
      DOZZLE_LEVEL: 'info'
      DOZZLE_TAILSIZE: 300
    labels:
      traefik.enable: 'true'
      traefik.http.routers.dozzle.entrypoints: 'websecure'
      traefik.http.routers.dozzle.rule: 'Host(`dozzle.$DOMAINNAME`)'
      traefik.http.routers.dozzle.service: 'dozzle-svc'
      traefik.http.routers.dozzle.tls: 'true'
      traefik.http.routers.dozzle.tls.certresolver: 'wildcard-cloudflare'
      traefik.http.services.dozzle-svc.loadbalancer.server.port: '8080'

  # ---------------------------------------------------------------------------- #
  #                                  Monitoring                                  #
  # ---------------------------------------------------------------------------- #
  netdata:
    container_name: 'netdata'
    hostname: 'docker_netdata'
    image: 'netdata/netdata'
    restart: 'unless-stopped'
    dns:
      1.1.1.1
    ports:
      - '19999:19999'
    cap_add:
      - 'SYS_PTRACE'
    security_opt:
      - 'apparmor:unconfined'
    volumes:
      - 'netdataconfig:/etc/netdata'
      - 'netdatalib:/var/lib/netdata'
      - 'netdatacache:/var/cache/netdata'
      - '/etc/passwd:/host/etc/passwd:ro'
      - '/etc/group:/host/etc/group:ro'
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/etc/os-release:/host/etc/os-release:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
    - 'proxy'
    - 'socket_proxy'
    - 'apps'
    environment:
      - TZ=$TZ
      - NETDATA_CLAIM_TOKEN=$NETDATA_CLAIM_TOKEN
      - NETDATA_CLAIM_URL=https://app.netdata.cloud
      - NETDATA_CLAIM_ROOMS=$NETDATA_CLAIM_ROOMS
    labels:
      traefik.enable: 'true'
      traefik.http.routers.netdata.entrypoints: 'websecure'
      traefik.http.routers.netdata.rule: 'Host(`netdata.$DOMAINNAME`)'
      traefik.http.routers.netdata.service: 'netdata-svc'
      traefik.http.routers.netdata.tls: 'true'
      traefik.http.routers.netdata.tls.certresolver: 'wildcard-cloudflare'
      traefik.http.services.netdata-svc.loadbalancer.server.port: '19999'

  prometheus:
    container_name: 'prometheus'
    image: 'prom/prometheus:latest'
    restart: 'unless-stopped'
    ports:
      - '9090:9090'
    networks:
      - 'apps'
      - 'proxy'
    volumes:
      - '$DOCKERDIR/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
      - 'prometheus_data:/data'
    environment:
      - 'TZ=$TZ'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data'
    user: 'root'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.prometheus.entrypoints: 'websecure'
      traefik.http.routers.prometheus.rule: 'Host(`prometheus.$DOMAINNAME`)'
      traefik.http.routers.prometheus.service: 'prometheus-svc'
      traefik.http.routers.prometheus.tls: 'true'
      traefik.http.routers.prometheus.tls.certresolver: 'wildcard-cloudflare'
      traefik.http.services.prometheus-svc.loadbalancer.server.port: '9090'

  # ---------------------------------------------------------------------------- #
  #                                     Homer                                    #
  # ---------------------------------------------------------------------------- #
  homer:
    container_name: 'homer'
    image: 'b4bz/homer:latest'
    ports:
      - 9643:8080
    networks:
      - 'apps'
      - 'proxy'
    volumes:
      - '$DOCKERDIR/homer:/www/assets'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.homer.entrypoints: 'websecure'
      traefik.http.routers.homer.rule: 'Host(`homer.$DOMAINNAME`)'
      traefik.http.routers.homer.service: 'homer-svc'
      traefik.http.routers.homer.tls: 'true'
      traefik.http.routers.homer.tls.certresolver: 'wildcard-cloudflare'
      traefik.http.services.homer-svc.loadbalancer.server.port: '8080'