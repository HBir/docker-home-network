version: '3.9'

# --------------------------------- Networks --------------------------------- #
# docker network create --gateway 10.0.90.1 --subnet 10.0.90.0/24 proxy
# docker network create --gateway 10.0.91.1 --subnet 10.0.91.0/24 --internal socket_proxy
# docker network create --gateway 10.0.92.1 --subnet 10.0.92.0/24 apps
networks:
  proxy:
    external:
      name: proxy
  socket_proxy:
    external:
      name: socket_proxy
  apps:
    external:
      name: apps
  default:
    driver: bridge

services:
  # ---------------------------------------------------------------------------- #
  #                                    Traefik                                   #
  # ---------------------------------------------------------------------------- #
  traefik:
    container_name: 'traefik'
    image: 'traefik:v2.6'
    restart: 'unless-stopped'
    dns:
      - '8.8.8.8'
    ports:
      - '80:80'
      - '443:443'
      - '8090:8080'
    networks:
      - 'socket_proxy'
      - 'proxy'
      - 'apps'
    volumes:
      - '$DOCKERDIR/traefik/traefik.log:/traefik.log'
      - '$DOCKERDIR/traefik/tls-certificates:/tls-certificates'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
  #    - '$DOCKERDIR/traefik/rules.toml:/etc/traefik/rules.toml'
    environment:
      CF_API_EMAIL: '${CF_API_EMAIL}'
      CF_API_KEY: '${CF_API_KEY}'
    extra_hosts:
      - host.docker.internal:172.17.0.1
    command:
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--ping'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.network=proxy'
      - '--accessLog=true'
      - '--accessLog.filePath=/traefik.log'
      - '--accessLog.bufferingSize=100'
      - '--accessLog.filters.statusCodes=400-599'

      - '--certificatesresolvers.wildcard-cloudflare.acme.dnschallenge=true'
      - '--certificatesResolvers.wildcard-cloudflare.acme.dnsChallenge.provider=cloudflare'
      - '--certificatesResolvers.wildcard-cloudflare.acme.dnsChallenge.disablepropagationcheck=true'
      - '--certificatesresolvers.wildcard-cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory'
      - '--certificatesResolvers.wildcard-cloudflare.acme.dnsChallenge.delayBeforeCheck=10'
      - '--certificatesresolvers.wildcard-cloudflare.acme.email=${CF_API_EMAIL}'
      - '--certificatesresolvers.wildcard-cloudflare.acme.storage=/tls-certificates/acme.json'
      - '--metrics.prometheus=true'
      - '--entryPoints.metrics.address=:8082'
      - '--metrics.prometheus.entryPoint=metrics'
  #      - "--providers.file=true"
  #      - "--providers.file.filename=/etc/traefik/rules.toml"
  #      - "--providers.file.watch=true"
    # labels:
    #   info: '(:8080)'
    #   traefik.enable: 'true'
    #   traefik.http.routers.traefik.entrypoints: 'websecure'
    #   traefik.http.routers.traefik.rule: 'Host(`traefik.${DOMAINNAME}`)'
    #   traefik.http.routers.traefik.service: 'api@internal'
    #   traefik.http.routers.traefik.tls: 'true'
    #   traefik.http.routers.traefik.tls.certresolver: 'wildcard-cloudflare'
    #   traefik.http.routers.traefik.tls.domains[0].main: '${VPN_URL}'
    #   traefik.http.routers.traefik.tls.domains[0].sans: '*.${VPN_URL}'


  # ---------------------------------------------------------------------------- #
  #                                 Adguard Home                                 #
  # ---------------------------------------------------------------------------- #
  adguardhome:
    container_name: 'adguard'
    image: 'adguard/adguardhome'
    restart: 'unless-stopped'
    dns:
      - '127.0.0.1'
      - '1.1.1.1'
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '81:80/tcp'
      - '444:443/tcp'
      - '443:443/udp'
      - '3000:3000/tcp'
    networks:
      apps:
        ipv4_address: '10.0.92.33'
      proxy:
    volumes:
      - './adguard-work:/opt/adguardhome/work'
      - './adguard-conf:/opt/adguardhome/conf'
      - './adguard-resolved:/etc/systemd/resolved.conf.d'
    # labels:
    #   traefik.enable: 'true'
    #   traefik.http.routers.adguard.entrypoints: 'websecure'
    #   traefik.http.routers.adguard.rule: 'Host(`adguard.${DOMAINNAME}`)'
    #   traefik.http.routers.adguard.tls: 'true'
    #   traefik.http.routers.adguard.tls.certresolver: 'wildcard-cloudflare'
    #   traefik.http.services.adguard.loadBalancer.server.port: '80'

  # ---------------------------------------------------------------------------- #
  #       Docker Socket Proxy - Security Enchanced Proxy for Docker Socket       #
  # ---------------------------------------------------------------------------- #
  socket-proxy:
    container_name: 'socket-proxy'
    image: 'tecnativa/docker-socket-proxy'
    restart: 'always'
    networks:
      socket_proxy:
        ipv4_address: '10.0.91.254'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    privileged: true
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Ouroboros
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portaienr
      - VOLUMES=1 # Portainer


  # ---------------------------------------------------------------------------- #
  #                              VPN Server & Client                             #
  # ---------------------------------------------------------------------------- #
  wireguard:
    container_name: 'wireguard'
    image: 'linuxserver/wireguard'
    restart: 'unless-stopped'
    ports:
      - '51820:51820/udp'
    cap_add:
      - 'NET_ADMIN'
      - 'SYS_MODULE'
    networks:
      apps: null
      proxy: null
    volumes:
      - '$DOCKERDIR/wireguard/config:/config'
      - '/lib/modules:/lib/modules'
    environment:
      - 'PUID=1001'
      - 'PGID=1001'
      - 'TZ=$TZ'
      - 'SERVERPORT=51820'
      - 'SERVERURL=hbir.asuscomm.com'
      - 'PEERS=3'
      - 'PEERDNS=10.0.92.33'
      - 'INTERNAL_SUBNET=10.6.0.0'
    depends_on: ['adguardhome']

  # vpn-client:
  #   image: ghcr.io/bubuntux/nordlynx
  #   container_name: nordlynx
  #   cap_add:
  #     - NET_ADMIN #required
  #   environment:
  #     - PRIVATE_KEY=${NORD_PK} #required
  #   networks:
  #     apps:
  #   restart: unless-stopped
